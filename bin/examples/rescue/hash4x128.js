"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// IMPORTS
// ================================================================================================
const index_1 = require("../../index");
// CONSTANTS
// ================================================================================================
const initialConstants = [
    144517900019036866096022507193071809599n, 271707809579969091656092579345468860225n, 139424957805302989189422527487860690608n, 126750251129487986697737866024960215983n,
    222874722259420705705156452827288280108n, 272544605074536992022002715099328341957n, 186039929131227683607842609567092660239n, 72441173700884116470152057515454511964n
];
const roundConstants = [
    [
        43786129005062704445564058334150535976n, 63518445355185868364234013334669667016n, 234385803769917650900402880542815341267n, 234723889404362568421139891742072853935n,
        249172012707023767393194448577131617596n, 313788206302320162865901140613842199411n, 337761574997213703069050794748149550630n, 145948776898046529216195242748455486442n,
        121688343742103052576341247982427656559n, 271780922157554178128050237090670273749n, 337213653195698800260722347294326303212n, 167365406629346616708133968313989663681n,
        180190005103722520299033981450011452930n, 80651337477278969298457270843967749642n, 248556996369085495834354343378241635711n, 167237292131177309918818202530118038503n,
        173910787254760209726084907837304524938n, 162978519079717468745745525851166804731n, 50770703286251199977609924275355535078n, 147896407670390898698334722292632254806n,
        73731253123354169609315040751260315103n, 18553426086291282037421682622082983148n, 260195368646415556935950902070174018616n, 78358198560571116714797800897273293119n,
        211287347430586272220529473335818115847n, 304964026178552231454674710996221357098n, 227697742414427279976990669911668953606n, 91637009072874661870450522421664189131n,
        266970357446601883981454123600108481883n, 177051387963218551860486792880938860033n, 21627853740313081517549793756027042325n, 282450985583369439650063017317909641032n
    ], [
        284260663305502764975387875400975902001n, 215470013294847680176221569956598829285n, 90221357518983554568674265809724588732n, 75377102595836162413978630356185583327n,
        245005707126082565805103278104609435948n, 163425234914669998981206096457792781979n, 322235832341344003776516614779004319990n, 234065002921340051085399638823423440420n,
        111565260535640075735152663712951088488n, 319168535914790928974973412964133064531n, 138927902611472157005216211165653164705n, 300211431809357941841089834740740629371n,
        103797853254449646830552260946348617467n, 152729891290009858023211742540340745001n, 36989244513213262728954497740323826527n, 146297490771676237768546629292174099624n,
        215241364151886547557806592482747056506n, 117711248530307349220489842455374935137n, 238983822848798781560544046329452251085n, 334102944131465010728578791904412767513n,
        184311626147690887873142081951082312006n, 258140843945620648032977862248337127178n, 162517557723149355384951322704743859578n, 208014503738645828398907536186011455497n,
        276455550607647144970027858404425959320n, 75230565242136322883128585187547194205n, 329332885179859596925012247920427927298n, 19582634223906535296540300653439476545n,
        158384362386707685854050647089971901397n, 316052197219425767827368266044234474435n, 311358040508401988937628602861243832131n, 52184887534857508398711262262060691312n
    ], [
        324803734729721739966222062413128028438n, 44252402569497008091955391017019607922n, 48457822043278455613012591819379134985n, 248392627969694832560456954005793083512n,
        150768576924851219810371677398217492281n, 23395167824616769349575235016826619987n, 302212281637786089556012369500320249297n, 310633893460587819261482388642422787785n,
        23778255972427801142474808265359067602n, 72016124547871172299173047160253248805n, 252683754387727069849105243952000396732n, 32316243100391539156809120800763992250n,
        181363582974840708636354083016287331455n, 77826663581595659353862677853818030427n, 259588193810570245596169482162684679424n, 181875089330384177695876998012659945961n,
        327914333341558849424739743909983048224n, 74317026403210680659045863158175186398n, 36544674377390804900322604513580270070n, 227978656714636679266227450991381829410n,
        293590678439422584691711898041854488242n, 273813989754625408716702818716878567012n, 275898428716458551121959422770694929433n, 164474649456191676622497673497704215389n,
        258434366055258002456575144158487936272n, 7003985946123015110785296989678049418n, 7794240170222893677445483003686982448n, 243995198095527871899035518061915377468n,
        207800449322138589481393752109418229194n, 188526703900669731442260274648596606828n, 130261891815046913387086055873756941377n, 160480376542224322857274406854362914134n
    ], [
        134990598363415916981302037628855906549n, 232302227410688615373004619667422255956n, 321810608661680679910293254817803089197n, 243172664193044066498932485669724866038n,
        281526123180073734835763713168421556105n, 297657993236061404983698628860978247104n, 150581129406368901241547213751066918143n, 141193511691544696166490641258867084876n,
        297488350778421464073636403205648998097n, 87566103775990617006371168829342093743n, 153268098882067969305925616054210030221n, 163217458683089537277875958965070603108n,
        333603141404991899722350396499092111712n, 61176055400532749720017188582336167079n, 95651969167485905615754605507811672767n, 93960400038285042294881634129991579541n,
        262268404333738518971638529707533934616n, 8109106948759306421400055285956262817n, 9174282376361145180976041787692052729n, 205234523344568214304169813994713302772n,
        102295300293712228828606643265792212520n, 165713195119485861923092299017428753549n, 166192645182050412233027170497820553520n, 70931930803618250130504101596499102477n,
        219499850442017066092675331853754589479n, 113846529586651650933827980488608759684n, 137732793370265217545632411416591632444n, 329572560875664492680119655758051430520n,
        50789439581413802148410003104141033599n, 299166278257078970517191635624310173108n, 211031439510169254704544447743518915092n, 272958669130955949586367854306886727427n
    ], [
        5378627730802530885191503583463868886n, 143400500359420343902101399305519086532n, 126558328860296652585735734722748550060n, 304689873978543930577270900775573827054n,
        140744711422336860609037475027207181456n, 191112321432771782071400481208281298942n, 171337510282529321536229744976094980611n, 3229517282078663303467881510498407167n,
        203408639444567665939991249803516388610n, 79584960911042821998317418851736608873n, 10250012506443079097924440930849127655n, 20434973256796033191440485535616767649n,
        56878558814619095383737847719747830056n, 335171468678634418214293939466957128692n, 242995454257514915271231297898671540165n, 57400590267297514532235494875385783829n,
        69189888093529004584294683194623492593n, 157184891802679005117263073949162013016n, 108925285434348146942803107842386901574n, 106041509723463257034056690507448325480n,
        64017927272113519940868982273952043484n, 238488570397301755805813357252361045124n, 230656290011037142930958911578132645400n, 76889415142346553757934833295963135204n,
        267807192182019510244802215658844423998n, 179081605699619084638288817667876728436n, 37531754478308256810346395168716559179n, 208330847604935695844671590985286917515n,
        264145334114958203529702568780160700012n, 155623296483529478855622013510777467917n, 92998124362436277095214562845955211468n, 264468251056997167207314545361343868453n
    ], [
        105078080820504716675101513092934108834n, 332295748629256962445370960511008089950n, 50594860028433935015047134220888703158n, 233688509004116354296718736552863237955n,
        306862502382335684468310606303728479729n, 286600226032374065339942480920087066360n, 38351150988220080067118741431691319539n, 138873250673303769705745831214855206916n,
        249644782134502687421993951725420880954n, 13778758487700464741224652513966188408n, 181535503367020070020878717905599171501n, 282161867013975202653973848950387983671n,
        59103502354214736717113654072050061328n, 270534248216353022371736854097867560495n, 42927355584363180899061603124736994872n, 227602595061834927552832631515284638496n,
        36520344525947788821159723779991014680n, 17168032422823223613864138203842639377n, 285710959462604423561999811292393804870n, 115057395011794086349040551143572383309n,
        238127402927606885717171241006285704971n, 216513668586624962393915484938057706510n, 196197028345390679439474141848834431113n, 206532092888253899732973735372456038495n,
        248776409395217494696884593595288156940n, 256302006369466700589442547945850644409n, 49074168020597245151128345171478872873n, 14510349613414233967240692823416229947n,
        2302663126644723841537944059259197572n, 95667201921883975980467904289020365140n, 180983095480373375778921571288294349626n, 290526085408591540049215948112164456077n
    ], [
        181525650391952223652647569838290709570n, 118677758633178567121571560759848692253n, 167556750080899183334083242174170600605n, 168326427007304379051467542655405266132n,
        251409138305593562136177378096352965463n, 306496153607569287900341400161894410651n, 96823651423721342304477932094767969982n, 254437802711880549681327927274712769719n,
        265797440763368272095787334043938788353n, 312798027360647314932569839190859810738n, 99024875312569160154283475614009229558n, 168660073511047762898500283011256401281n,
        336710502592172870771773706106052480125n, 300441609518933755099746647802531730674n, 264234118439966992121076074629754036126n, 309368910692484261985788022794389803875n,
        49160359996388922184997133664098391810n, 115857169180362375503241141022012624544n, 99239320968052754882756828051489297187n, 120244342208135707805292101998067177964n,
        28300882480032287772198196751804855367n, 108636707488397647893280013987888901658n, 319710230579148659853502939130009288409n, 67060492735304012530091743588544337956n,
        152475717579024851942379228195622249474n, 149530896034691135678008947513443233538n, 222755886957085918262835615822280346249n, 64693947239170515844887280689773366447n,
        169853150423348353082001530492076306220n, 108041485396884824468274291723058664787n, 173243132638935383472673663796777940437n, 8135013089267394787603996319968957655n
    ], [
        185883962421920623361064863960561250461n, 221274426954836034938440045257751587022n, 62743419816590556413330819620480447357n, 183369687823861575443451045289729326909n,
        238486692847734048513531651331703733651n, 84948479042611110332723132193988372133n, 61528625269662513670788333643648908049n, 246328828346250205686743175797490130336n,
        128613377339510163764544103740750324497n, 280054849022138832241569015073473972461n, 231366754060387591506955188641878742953n, 148333412189958752235305757066674898591n,
        51243934571492049051952329283924897110n, 158608983259580714982589063278164609785n, 123687679180164901925505695473788604012n, 335825512460943703328744116523855627419n,
        268213780274107819832269942302137710362n, 162372149575992336490041951443549963198n, 199275309036123010153005378852228884268n, 154010305420890900672530748076328657326n,
        172069245999203207473807077259826148207n, 91787590340571852895099269445062444337n, 143280937272896213945660397349803596431n, 321720378452808178088136605832780303672n,
        65190912063248149234697254266474957770n, 23788647489798790985544475812913738938n, 280284503011708456018487305447281751234n, 158152760623798683772737750583873810188n,
        177297199319042951436250651507870295483n, 322322051885243863387400764208963348164n, 256671235942906744034845909709239549038n, 239809042740705170653958153541982111260n
    ]
];
// STARK DEFINITION
// ================================================================================================
const field = new index_1.PrimeField(2n ** 128n - 9n * 2n ** 32n + 1n);
const steps = 32;
const alpha = 3n;
const invAlpha = -113427455640312821154458202464371168597n;
// MDS matrix
const mds = [
    [340282366920938463463374607393113505064n, 340282366920938463463374607393113476633n, 340282366920938463463374607393112623703n, 340282366920938463463374607393088807273n],
    [1080n, 42471n, 1277640n, 35708310n],
    [340282366920938463463374607393113505403n, 340282366920938463463374607393113491273n, 340282366920938463463374607393113076364n, 340282366920938463463374607393101570233n],
    [40n, 1210n, 33880n, 925771n]
];
const invMds = [
    [236997924285633886309140921207528337986n, 247254910923297358352547052529406562002n, 311342028444809266296393502237594936029n, 126030506267014245727175780515967965110n],
    [33069997328254894416993606273702832836n, 59740111947936946229464514160137230831n, 88480676416265968399408181712033476738n, 124630167308491865219096049621346098829n],
    [336618017400133662891528246258390023400n, 144341202744775798260123226512082052891n, 154884404066691444097361840554534567820n, 4667796528407935026932436315406220930n],
    [73878794827854483309086441046605817365n, 229228508225866824084614421584601165863n, 125857624914110248133585690282064031000n, 84953896817024417490170340940393220925n]
];
const tFunctionScript = `
    a0: r0^${alpha};
    a1: r1^${alpha};
    a2: r2^${alpha};
    a3: r3^${alpha};

    b0: (${mds[0][0]} * a0) + (${mds[0][1]} * a1) + (${mds[0][2]} * a2) + (${mds[0][3]} * a3) + k0;
    b1: (${mds[1][0]} * a0) + (${mds[1][1]} * a1) + (${mds[1][2]} * a2) + (${mds[1][3]} * a3) + k1;
    b2: (${mds[2][0]} * a0) + (${mds[2][1]} * a1) + (${mds[2][2]} * a2) + (${mds[2][3]} * a3) + k2;
    b3: (${mds[3][0]} * a0) + (${mds[3][1]} * a1) + (${mds[3][2]} * a2) + (${mds[3][3]} * a3) + k3;

    c0: b0^(${invAlpha});
    c1: b1^(${invAlpha});
    c2: b2^(${invAlpha});
    c3: b3^(${invAlpha});

    d0: (${mds[0][0]} * c0) + (${mds[0][1]} * c1) + (${mds[0][2]} * c2) + (${mds[0][3]} * c3) + k4;
    d1: (${mds[1][0]} * c0) + (${mds[1][1]} * c1) + (${mds[1][2]} * c2) + (${mds[1][3]} * c3) + k5;
    d2: (${mds[2][0]} * c0) + (${mds[2][1]} * c1) + (${mds[2][2]} * c2) + (${mds[2][3]} * c3) + k6;
    d3: (${mds[3][0]} * c0) + (${mds[3][1]} * c1) + (${mds[3][2]} * c2) + (${mds[3][3]} * c3) + k7;
`;
const tConstraintsScript = `
    a0: r0^${alpha};
    a1: r1^${alpha};
    a2: r2^${alpha};
    a3: r3^${alpha};

    b0: (${mds[0][0]} * a0) + (${mds[0][1]} * a1) + (${mds[0][2]} * a2) + (${mds[0][3]} * a3) + k0;
    b1: (${mds[1][0]} * a0) + (${mds[1][1]} * a1) + (${mds[1][2]} * a2) + (${mds[1][3]} * a3) + k1;
    b2: (${mds[2][0]} * a0) + (${mds[2][1]} * a1) + (${mds[2][2]} * a2) + (${mds[2][3]} * a3) + k2;
    b3: (${mds[3][0]} * a0) + (${mds[3][1]} * a1) + (${mds[3][2]} * a2) + (${mds[3][3]} * a3) + k3;

    c0: (n0 - k4);
    c1: (n1 - k5);
    c2: (n2 - k6);
    c3: (n3 - k7);
    
    d0: (${invMds[0][0]} * c0) + (${invMds[0][1]} * c1) + (${invMds[0][2]} * c2) + (${invMds[0][3]} * c3);
    d1: (${invMds[1][0]} * c0) + (${invMds[1][1]} * c1) + (${invMds[1][2]} * c2) + (${invMds[1][3]} * c3);
    d2: (${invMds[2][0]} * c0) + (${invMds[2][1]} * c1) + (${invMds[2][2]} * c2) + (${invMds[2][3]} * c3);
    d3: (${invMds[3][0]} * c0) + (${invMds[3][1]} * c1) + (${invMds[3][2]} * c2) + (${invMds[3][3]} * c3);
    
    e0: d0^${alpha};
    e1: d1^${alpha};
    e2: d2^${alpha};
    e3: d3^${alpha};
`;
// create the STARK for MiMC computation
const rescStark = new index_1.Stark({
    field: field,
    tExpressions: {
        [index_1.script]: tFunctionScript,
        n0: 'd0',
        n1: 'd1',
        n2: 'd2',
        n3: 'd3'
    },
    tConstraints: {
        [index_1.script]: tConstraintsScript,
        q0: `b0 - e0`,
        q1: `b1 - e1`,
        q2: `b2 - e2`,
        q3: `b3 - e3`
    },
    tConstraintDegree: 3,
    constants: [
        { values: roundConstants[0], pattern: 'repeat' },
        { values: roundConstants[1], pattern: 'repeat' },
        { values: roundConstants[2], pattern: 'repeat' },
        { values: roundConstants[3], pattern: 'repeat' },
        { values: roundConstants[4], pattern: 'repeat' },
        { values: roundConstants[5], pattern: 'repeat' },
        { values: roundConstants[6], pattern: 'repeat' },
        { values: roundConstants[7], pattern: 'repeat' }
    ]
});
// TESTING
// ================================================================================================
// set up inputs and assertions
const inputs = buildInputs([42n, 43n]);
const assertions = [
    { step: steps - 1, register: 0, value: 302524937772545017647250309501879538110n },
    { step: steps - 1, register: 1, value: 205025454306577433144586673939030012640n },
];
// generate a proof
const proof = rescStark.prove(assertions, steps, inputs);
console.log('-'.repeat(20));
// verify the proof
rescStark.verify(assertions, proof, steps);
console.log('-'.repeat(20));
console.log(`Proof size: ${Math.round(rescStark.sizeOf(proof) / 1024 * 100) / 100} KB`);
// HELPER FUNCTIONS
// ================================================================================================
function buildInputs(values) {
    const r = [
        field.add(values[0], initialConstants[0]),
        field.add(values[1], initialConstants[1]),
        initialConstants[2],
        initialConstants[3]
    ];
    // first step of round 1
    const a = [
        field.exp(r[0], invAlpha),
        field.exp(r[1], invAlpha),
        field.exp(r[2], invAlpha),
        field.exp(r[3], invAlpha)
    ];
    for (let i = 0; i < 4; i++) {
        let sum = 0n;
        for (let j = 0; j < 4; j++) {
            sum = field.add(sum, field.mul(mds[i][j], a[j]));
        }
        r[i] = sum;
    }
    r[0] = field.add(r[0], initialConstants[4]);
    r[1] = field.add(r[1], initialConstants[5]);
    r[2] = field.add(r[2], initialConstants[6]);
    r[3] = field.add(r[3], initialConstants[7]);
    return r;
}
//# sourceMappingURL=hash4x128.js.map